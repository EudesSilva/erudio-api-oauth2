ext {
  developerMachines = ['LEANDRO']

  activeRepos = {
    if (developerMachines.contains(System.getenv('USER'))) {
      maven { url 'http://localhost:8081/artifactory/repo' }
    } else {
      mavenCentral()
    }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven { url 'http://oss.jfrog.org/artifactory/oss-snapshot-local/' }
    jcenter()
  }
}
buildscript {
	repositories {
		jcenter()
		mavenCentral()
		maven { url "https://repo.spring.io/plugins-release" }
		maven { url "http://repo.spring.io/libs-release" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.0.RC1")
	}
}

apply plugin: 'groovy'
apply plugin: "java"
apply plugin: "eclipse"
apply plugin: "idea"
apply plugin: "spring-boot"
apply plugin: "war"

jar {
	baseName = "erudio-api-oauth2"
	version =  "0.1.0"
}

repositories {
	mavenCentral()
	maven {
		url "https://oss.sonatype.org/content/repositories/snapshots/"
	}
	maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
	maven { url "https://repo.spring.io/libs-release" }
	maven { url "http://oss.jfrog.org/artifactory/oss-release-local" }
}

dependencies {
	compile("org.springframework.boot:spring-boot-starter-web")
	compile("org.springframework.boot:spring-boot-starter-actuator")
	compile("org.springframework.boot:spring-boot-starter-security")
	compile("org.springframework.boot:spring-boot-starter-data-jpa")
	compile("org.springframework.security.oauth:spring-security-oauth2")
	compile("org.hsqldb:hsqldb")
	compile("mysql:mysql-connector-java")
	compile("org.codehaus.groovy:groovy-all")
	compile("com.google.code.gson:gson")
	compile("org.apache.commons:commons-email:1.1")
	compile("org.apache.commons:commons-lang3:3.3.2")
	compile("org.apache.commons:commons-io:1.3.2")
	compile("com.mangofactory:swagger-springmvc:1.0.0")
	compile("org.ajar:swagger-springmvc-ui:0.4")
	compile("org.apache.tomcat.embed:tomcat-embed-jasper:8.0.28")
	providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")
	testCompile("org.springframework.boot:spring-boot-starter-test")
	testCompile("junit:junit:4.12")
	testCompile("com.jayway.jsonpath:json-path")
	testCompile("com.jayway.jsonpath:json-path-assert")
	testCompile("com.jayway.restassured:rest-assured:2.4.0")
}

task wrapper(type: Wrapper) {
	gradleVersion = "2.7"
}
